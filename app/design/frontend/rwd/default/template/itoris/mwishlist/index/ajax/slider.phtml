<?php
/**
 * ITORIS
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the ITORIS's Magento Extensions License Agreement
 * which is available through the world-wide-web at this URL:
 * http://www.itoris.com/magento-extensions-license.html
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to sales@itoris.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade the extensions to newer
 * versions in the future. If you wish to customize the extension for your
 * needs please refer to the license agreement or contact sales@itoris.com for more information.
 *
 * @category   ITORIS
 * @package    ITORIS_MWISHLIST
 * @copyright  Copyright (c) 2012 ITORIS INC. (http://www.itoris.com)
 * @license    http://www.itoris.com/magento-extensions-license.html  Commercial License
 */
?>
<?php /** @var $this Itoris_MWishlist_Block_Mwishlisttabs */ ?>
<div id="tabsandcontent">
<?php
$namesmodel = Mage::getModel('itoris_mwishlist/mwishlistnames');
$namescollection = $namesmodel->getnamecollection();

$id = $this->getRequest()->getParam('tabId');
$temp = array();
if ($id) {
	$customerId = Mage::getSingleton('customer/session')->getCustomer()->getId();
	$id = $namesmodel->checkMainWishlist($customerId);
}
$temp = $namesmodel->getNameById($id);
$wishlistId = $temp['multiwishlist_id'];
?>
<script type="text/javascript">

	var iwishtabsSettings = eval('[{"id":"1","enabled":"1","behavior":"click","theme":"descending_white"}]')[0];
</script>

<div class="iwishtabs">
	<div class="titles i_titles with-scroll">
		<div class="scroll i_scroll _left i__left" style="display:none">
			<div>&nbsp;</div>
		</div>
		<div class="scroll i_scroll _right i__right" style="display:none">
			<div>&nbsp;</div>
		</div>
		<div class="titles-holder i_titles-holder" style="margin-left:0px">
			<!--
<?php foreach ($namescollection as $row): ?>
			--><span class="title i_title <?php echo $wishlistId == $row['multiwishlist_id'] ? 'current' : '';?>"
					 id="tab_title_<?php  echo $row['multiwishlist_id']?>"><!--
				 --><span class="left i_left"><span class="corner i_corner l">&nbsp;</span>&nbsp;</span><!--
				 --><span class="center i_center"><?php  echo $this->__($row['multiwishlist_name'])?></span><!--
				 --><span class="right i_right"><span class="corner i_corner r">&nbsp;</span>&nbsp;</span><!--
			 --></span><!--
	<?php endforeach ?>
-->		</div>
	</div>
</div>
<div id="content">
	<?php
	$tab_content = $this->getLayout()->createBlock('itoris_mwishlist/frontview');
	$tab_content->setNamecollection($namescollection);
	echo $tab_content->toHtml();
	?>
</div>
<div class="buttons-set">
	<p class="back-link"><a href="<?php echo $this->getUrl('customer/account/') ?>">
			<small>&laquo; </small><?php echo $this->__('Back') ?></a></p>
</div>
<script type="text/javascript">

	$$('.iwishtabs .titles .title').each(function(title) {
		title.observe(iwishtabsSettings.behavior, function(event) {
			var elt = Event.findElement(event, '.title');
			var currentTitle = $$('.iwishtabs .titles .title.current')[0];
			itorisWishlist.hideMobileContent();
			if (currentTitle) {
				if (itorisWishlist.isResponsive || currentTitle != elt) {
					currentTitle.removeClassName('current');
				}
				if (currentTitle == elt) {
					return;
				}
			}

			elt.addClassName('current');

			new Ajax.Updater('content', '<?php echo Mage::getUrl('wishlist/index/ajax/')?>', { method: 'post',
				parameters: {tabId: elt.id.substring(10)},

				onSuccess: function(transport) {
					Element.hide('loading-mask');
					$('content').update(transport.responseText);
					retruncateOptionsTimeout();
					itorisWishlist.showMobileContent();
				},
				onLoading: Element.show('loading-mask')

			});
		});
	});
	Event.observe(document, 'dom:loaded', initializeTabsSlider);
	function initializeTabsSlider() {
		if (window.opera && window.opera.version() < 10) {
			document.documentElement.className += ' opera9';
		}

		if (iwishtabsSlider.checkScroolNeeds()) {
			iwishtabsSlider.activateScroll();
		} else {
			$$('.iwishtabs .titles')[0].removeClassName('with-scroll');
		}

		mwishlistUpdateLink();
		retruncateOptionsTimeout()
		iwishtabsSlider.initialized = true;
	}
	function mwishlistUpdateLink() {
		var wishlistLink = $$('.header a[href|=<?php echo Mage::getUrl('wishlist') ?>]');
		if (wishlistLink.length) {
			new Ajax.Request('<?php echo Mage::getUrl('wishlist/index/itemCount') ?>', {
				onComplete: function(transport) {
					var obj = transport.responseText.evalJSON();
					if (obj.link_text) {
						wishlistLink[0].update(obj.link_text);
					}
				}
			});
		}
	}
	Event.observe(window, 'load', function(event) {
		if (!iwishtabsSlider.initialized) {
			initializeTabsSlider();
		}
		if (!iwishtabsSlider.checkScroolNeeds()) {
			$$('.iwishtabs .titles')[0].removeClassName('with-scroll');
		}
	});
	function showWidth() {
		var holder = $$('.iwishtabs .titles-holder')[0];
		var scrollWidth = holder.scrollWidth;
		var offsetWidth = holder.offsetWidth;
		document.title = scrollWidth + ' ' + offsetWidth;
		window.setTimeout('showWidth()', 10);
	}
	function iwishtabsSlider() {
		this.initialized = false;
		this.scrollSpeed = 1;
		this.defaultScrollSpeed = 3;
		this.scrollAcceleration = 1.1;
		this.scrollDelay = 15;
		this.scrollDirection = 0;
		this.isScrollActivated = false;
	}
	iwishtabsSlider.prototype.checkScroolNeeds = function() {
		var holder = $$('.iwishtabs .i_titles-holder')[0];
		if (!holder) {
			return false;
		}

		var scrollWidth = holder.scrollWidth;
		var offsetWidth = holder.offsetWidth;
		return scrollWidth > offsetWidth;
	};
	iwishtabsSlider.prototype.activateScroll = function() {
		$$('.iwishtabs .titles')[0].addClassName('with-scroll');
		$$('.iwishtabs .titles .scroll._left')[0].observe('mousedown', function(event) {
			iwishtabsSlider.scrollToLeft();
		});
		$$('.iwishtabs .titles .scroll._left')[0].observe('mouseup', function(event) {
			iwishtabsSlider.scrollStop();
		});
		$$('.iwishtabs .titles .scroll._right')[0].observe('mousedown', function(event) {
			iwishtabsSlider.scrollToRight();
		});
		$$('.iwishtabs .titles .scroll._right')[0].observe('mouseup', function(event) {
			iwishtabsSlider.scrollStop();
		});
		this.isScrollActivated = true;
	};
	iwishtabsSlider.prototype.scrollToLeft = function() {
		this.scrollDirection = -1;
		this.scrollStart();
	};
	iwishtabsSlider.prototype.scrollToRight = function() {
		this.scrollDirection = 1;
		this.scrollStart();
	};
	iwishtabsSlider.prototype.scrollStop = function() {
		this.scrollDirection = 0;
		this.scrollSpeed = this.defaultScrollSpeed;
	};
	iwishtabsSlider.prototype.scrollStart = function() {
		this.scroll();
	};
	iwishtabsSlider.prototype.scroll = function() {
		if (this.scrollDirection == 0) return;
		var titlesHolder = $$('.iwishtabs .titles-holder')[0];
		titlesHolder.scrollLeft += this.scrollDirection * this.scrollSpeed;
		this.scrollSpeed = this.scrollSpeed * this.scrollAcceleration;
		if (this.scrollDirection == -1 && titlesHolder.scrollLeft <= 0) {
			return;
		}
		if (this.scrollDirection == 1 && titlesHolder.scrollLeft
			>= titlesHolder.scrollWidth - titlesHolder.offsetWidth) {
			return;
		}
		window.setTimeout(function() {
			this.scroll();
		}.bind(this), this.scrollDelay);
	};
	iwishtabsSlider = new iwishtabsSlider();

	function retruncateOptionsTimeout() {
		setTimeout(retruncateOptions, 100);
	}
	function retruncateOptions() {
		$$('.truncated').each(function(element){
			Event.stopObserving(element, 'mouseover');
			Event.observe(element, 'mouseover', function(){
				if (element.down('div.truncated_full_value')) {
					element.down('div.truncated_full_value').addClassName('show')
				}
			});
			Event.stopObserving(element, 'mouseout');
			Event.observe(element, 'mouseout', function(){
				if (element.down('div.truncated_full_value')) {
					element.down('div.truncated_full_value').removeClassName('show')
				}
			});

		});
	}
</script>
</div>

